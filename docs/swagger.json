{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Personal task organization tool for developers",
        "title": "Michishirube API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Michishirube Support",
            "url": "https://github.com/jparrill/michishirube",
            "email": "padajuan@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/comments": {
            "post": {
                "description": "Create a new comment for a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Create a new comment",
                "parameters": [
                    {
                        "description": "Comment to create",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateCommentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "delete": {
                "description": "Delete a comment by ID",
                "tags": [
                    "comments"
                ],
                "summary": "Delete comment",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteCommentResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/links": {
            "post": {
                "description": "Create a new link associated with a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Create a new link",
                "parameters": [
                    {
                        "description": "Link to create",
                        "name": "link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/links/{id}": {
            "get": {
                "description": "Retrieve a specific link by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Get link by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Link"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a link with new data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "links"
                ],
                "summary": "Update link",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Link data",
                        "name": "link",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Link"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Link"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a link by ID",
                "tags": [
                    "links"
                ],
                "summary": "Delete link",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/report": {
            "get": {
                "description": "Generate an automatic status report with working_on, next_up, and blockers sections",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Generate status report",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReportResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Get all tasks with optional filtering by status, priority, tags, etc.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "List tasks",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"new,in_progress\"",
                        "description": "Filter by status (comma-separated)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"high,critical\"",
                        "description": "Filter by priority (comma-separated)",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"k8s,memory\"",
                        "description": "Filter by tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include archived tasks",
                        "name": "include_archived",
                        "in": "query"
                    },
                    {
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "Maximum number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TaskListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new task with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task to create",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Retrieve a specific task with its links and comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TaskWithDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace entire task with provided data (PUT)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update entire task",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task by ID",
                "tags": [
                    "tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Partially update a task with the provided fields (PATCH)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update task fields",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PatchTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Comment content",
                    "type": "string",
                    "example": "Found the root cause in the controller"
                },
                "created_at": {
                    "description": "Creation timestamp",
                    "type": "string",
                    "example": "2024-01-15T11:00:00Z"
                },
                "id": {
                    "description": "Unique identifier",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440002"
                },
                "task_id": {
                    "description": "Associated task ID",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "models.CreateCommentRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Comment content",
                    "type": "string",
                    "example": "Found the root cause in the controller"
                },
                "task_id": {
                    "description": "Associated task ID",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "models.CreateCommentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Comment ID",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440002"
                },
                "message": {
                    "description": "Success message",
                    "type": "string",
                    "example": "Comment created successfully"
                }
            }
        },
        "models.CreateLinkRequest": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Additional metadata",
                    "type": "string"
                },
                "status": {
                    "description": "Link status",
                    "type": "string",
                    "example": "merged"
                },
                "task_id": {
                    "description": "Associated task ID",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "title": {
                    "description": "Display title",
                    "type": "string",
                    "example": "Fix memory leak"
                },
                "type": {
                    "description": "Link type",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.LinkType"
                        }
                    ],
                    "example": "pull_request"
                },
                "url": {
                    "description": "Link URL",
                    "type": "string",
                    "example": "https://github.com/org/repo/pull/456"
                }
            }
        },
        "models.CreateTaskRequest": {
            "type": "object",
            "properties": {
                "blockers": {
                    "description": "Blocking issues",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jira_id": {
                    "description": "Jira ticket ID",
                    "type": "string",
                    "example": "OCPBUGS-5678"
                },
                "priority": {
                    "description": "Task priority",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Priority"
                        }
                    ],
                    "example": "high"
                },
                "tags": {
                    "description": "Task tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Task title",
                    "type": "string",
                    "example": "Implement new feature"
                }
            }
        },
        "models.DeleteCommentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Success message",
                    "type": "string",
                    "example": "Comment deleted successfully"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code",
                    "type": "string",
                    "example": "TASK_NOT_FOUND"
                },
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Task not found"
                }
            }
        },
        "models.Link": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                },
                "metadata": {
                    "description": "Additional metadata",
                    "type": "string",
                    "example": "{\"pr_number\": 456, \"author\": \"user\"}"
                },
                "status": {
                    "description": "Link status",
                    "type": "string",
                    "example": "merged"
                },
                "task_id": {
                    "description": "Associated task ID",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "title": {
                    "description": "Display title",
                    "type": "string",
                    "example": "Fix memory leak"
                },
                "type": {
                    "description": "Type of link",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.LinkType"
                        }
                    ],
                    "example": "pull_request"
                },
                "url": {
                    "description": "Link URL",
                    "type": "string",
                    "example": "https://github.com/org/repo/pull/456"
                }
            }
        },
        "models.LinkType": {
            "type": "string",
            "enum": [
                "pull_request",
                "slack_thread",
                "jira_ticket",
                "documentation",
                "other"
            ],
            "x-enum-varnames": [
                "PullRequest",
                "SlackThread",
                "JiraTicket",
                "Documentation",
                "Other"
            ]
        },
        "models.PatchTaskRequest": {
            "type": "object",
            "properties": {
                "blockers": {
                    "description": "Blocking issues",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priority": {
                    "description": "Task priority",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Priority"
                        }
                    ],
                    "example": "high"
                },
                "status": {
                    "description": "Task status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Status"
                        }
                    ],
                    "example": "in_progress"
                },
                "tags": {
                    "description": "Task tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "description": "Task title",
                    "type": "string",
                    "example": "Updated title"
                }
            }
        },
        "models.Priority": {
            "type": "string",
            "enum": [
                "minor",
                "normal",
                "high",
                "critical",
                "normal"
            ],
            "x-enum-varnames": [
                "Minor",
                "Normal",
                "High",
                "Critical",
                "DefaultPriority"
            ]
        },
        "models.ReportResponse": {
            "type": "object",
            "properties": {
                "blockers": {
                    "description": "Blocked tasks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TaskWithDetails"
                    }
                },
                "next_up": {
                    "description": "Tasks to work on next",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TaskWithDetails"
                    }
                },
                "working_on": {
                    "description": "Tasks in progress or completed",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TaskWithDetails"
                    }
                }
            }
        },
        "models.Status": {
            "type": "string",
            "enum": [
                "new",
                "in_progress",
                "blocked",
                "done",
                "archived",
                "new"
            ],
            "x-enum-varnames": [
                "New",
                "InProgress",
                "Blocked",
                "Done",
                "Archived",
                "DefaultStatus"
            ]
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "blockers": {
                    "description": "Blocking issues",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Waiting for review from @team-lead"
                    ]
                },
                "created_at": {
                    "description": "Creation timestamp",
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "id": {
                    "description": "Unique identifier",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jira_id": {
                    "description": "Jira ticket ID or NO-JIRA",
                    "type": "string",
                    "example": "OCPBUGS-1234"
                },
                "priority": {
                    "description": "Task priority",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Priority"
                        }
                    ],
                    "example": "high"
                },
                "status": {
                    "description": "Current status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Status"
                        }
                    ],
                    "example": "in_progress"
                },
                "tags": {
                    "description": "Associated tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "k8s",
                        "memory"
                    ]
                },
                "title": {
                    "description": "Task title",
                    "type": "string",
                    "example": "Fix memory leak in pod controller"
                },
                "updated_at": {
                    "description": "Last update timestamp",
                    "type": "string",
                    "example": "2024-01-15T14:20:00Z"
                }
            }
        },
        "models.TaskListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "description": "Request limit",
                    "type": "integer",
                    "example": 20
                },
                "offset": {
                    "description": "Request offset",
                    "type": "integer",
                    "example": 0
                },
                "tasks": {
                    "description": "List of tasks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Task"
                    }
                },
                "total": {
                    "description": "Total number of tasks",
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "models.TaskWithDetails": {
            "type": "object",
            "properties": {
                "blockers": {
                    "description": "Blocking issues",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Waiting for review from @team-lead"
                    ]
                },
                "comments": {
                    "description": "Associated comments",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Comment"
                    }
                },
                "created_at": {
                    "description": "Creation timestamp",
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "id": {
                    "description": "Unique identifier",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "jira_id": {
                    "description": "Jira ticket ID or NO-JIRA",
                    "type": "string",
                    "example": "OCPBUGS-1234"
                },
                "links": {
                    "description": "Associated links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Link"
                    }
                },
                "priority": {
                    "description": "Task priority",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Priority"
                        }
                    ],
                    "example": "high"
                },
                "status": {
                    "description": "Current status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Status"
                        }
                    ],
                    "example": "in_progress"
                },
                "tags": {
                    "description": "Associated tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "k8s",
                        "memory"
                    ]
                },
                "title": {
                    "description": "Task title",
                    "type": "string",
                    "example": "Fix memory leak in pod controller"
                },
                "updated_at": {
                    "description": "Last update timestamp",
                    "type": "string",
                    "example": "2024-01-15T14:20:00Z"
                }
            }
        }
    }
}